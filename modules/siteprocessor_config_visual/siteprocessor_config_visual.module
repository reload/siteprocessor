<?php
/**
 * Implements hook_block_info().
 */
function siteprocessor_config_visual_block_info(){
  $blocks=array(
    'topblock' =>array(
      'info' => t('Top block'),
      'cache' => DRUPAL_NO_CACHE,
    ),
    'ownerblock' =>array(
      'info' => t('Owner block'),
      'cache' => DRUPAL_NO_CACHE,
    ),
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function siteprocessor_config_visual_block_view($delta){
  $block = array();
  switch ($delta) {
    case 'topblock':
      $block['subject'] = '';

      // Insert default site logo, if available.
      if ($image_fid = variable_get('siteprocessor_config_visual_top_image_fid', FALSE)) {
        $image = file_load($image_fid);
        $block['content']=l(theme('image_style', array('style_name' => 'toplogo_image', 'path' => $image->uri)), '<front>', array('html' => TRUE));
      }
      else {
        $block['content'] = user_access('administer site processor images') ? t('You can upload the site logo ') . l(t('right here'), 'admin/config/siteprocessor/config_visual/images') : '';
      }

      // Check if we're on a node view,
      // if so and the node has a page logo attached,
      // then replace the default logo.
      $path = arg();
      if ($path[0] == 'node' && isset($path[1]))  {
          $node = node_load($path[1]);
          if (isset($node->field_page_top_image[LANGUAGE_NONE][0]['fid'])) {
            $image = file_load($node->field_page_top_image[LANGUAGE_NONE][0]['fid']);
            $block['content']=l(theme('image_style', array('style_name' => 'toplogo_image', 'path' => $image->uri)), '<front>', array('html' => TRUE));
          }
      }
      break;
    case 'ownerblock':
      $block['subject'] = '';
      if ($image_fid = variable_get('siteprocessor_config_visual_owner_image_fid', FALSE)) {
        $image = file_load($image_fid);
        $block['content']=theme('image', array('path' => $image->uri));
      }
      else {
        $block['content'] = user_access('administer site processor images') ? t('You can upload the owner logo ') . l(t('right here'), 'admin/config/siteprocessor/config_visual/images') : '';
      }
      break;
  }
  return $block;
}

/**
 * Implement a custom form submit handler
 */
function siteprocessor_config_visual_images_form_submit($form, &$form_state) {
  // Saves or deletes top image (logo).
  if ($form_state['values']['siteprocessor_config_visual_top_image_fid'] != 0) {
    $file = file_load($form_state['values']['siteprocessor_config_visual_top_image_fid']);
    $file->status = FILE_STATUS_PERMANENT;
    file_save($file);
    file_usage_add($file, 'siteprocessor_config_visual', 'top_image', 1);
    variable_set('siteprocessor_config_visual_top_image_fid', $file->fid);
    drupal_set_message(t('The top image @image_name was uploaded and saved with an ID of @fid', array('@image_name' => $file->filename, '@fid' => $file->fid)));
  }
  elseif ($form_state['values']['siteprocessor_config_visual_top_image_fid'] == 0) {
    $fid = variable_get('siteprocessor_config_visual_top_image_fid', FALSE);
    $file = $fid ? file_load($fid) : FALSE;
    if ($file) {
      file_usage_delete($file, 'siteprocessor_config_visual', 'top_image', 1);
      file_delete($file);
      drupal_set_message(t('The image @image_name was removed.', array('@image_name' => $file->filename)));
    }
    variable_set('siteprocessor_config_visual_top_image_fid', FALSE);
  }

  //Saves or deletes background image
  if ($form_state['values']['siteprocessor_config_visual_background_image_fid'] != 0) {
    $file = file_load($form_state['values']['siteprocessor_config_visual_background_image_fid']);
    $file->status = FILE_STATUS_PERMANENT;
    file_save($file);
    file_usage_add($file, 'siteprocessor_config_visual', 'background_image', 1);
    variable_set('siteprocessor_config_visual_background_image_fid', $file->fid);
    drupal_set_message(t('The background image @image_name was uploaded and saved with an ID of @fid', array('@image_name' => $file->filename, '@fid' => $file->fid)));
  }
  elseif ($form_state['values']['siteprocessor_config_visual_background_image_fid'] == 0) {
    $fid = variable_get('siteprocessor_config_visual_background_image_fid', FALSE);
    $file = $fid ? file_load($fid) : FALSE;
    if ($file) {
      file_usage_delete($file, 'siteprocessor_config_visual', 'background_image', 1);
      file_delete($file);
      drupal_set_message(t('The background image @image_name was removed.', array('@image_name' => $file->filename)));
    }
    variable_set('siteprocessor_config_visual_background_image_fid', FALSE);
  }

  //Saves or deletes owner image
  if ($form_state['values']['siteprocessor_config_visual_owner_image_fid'] != 0) {
    $file = file_load($form_state['values']['siteprocessor_config_visual_owner_image_fid']);
    $file->status = FILE_STATUS_PERMANENT;
    file_save($file);
    file_usage_add($file, 'siteprocessor_config_visual', 'owner_image', 1);
    variable_set('siteprocessor_config_visual_owner_image_fid', $file->fid);
    drupal_set_message(t('The background image @image_name was uploaded and saved with an ID of @fid', array('@image_name' => $file->filename, '@fid' => $file->fid)));
  }
  elseif ($form_state['values']['siteprocessor_config_visual_owner_image_fid'] == 0) {
    $fid = variable_get('siteprocessor_config_visual_owner_image_fid', FALSE);
    $file = $fid ? file_load($fid) : FALSE;
    if ($file) {
      file_usage_delete($file, 'siteprocessor_config_visual', 'owner_image', 1);
      file_delete($file);
      drupal_set_message(t('The owner image @image_name was removed.', array('@image_name' => $file->filename)));
    }
    variable_set('siteprocessor_config_visual_owner_image_fid', FALSE);
  }
}

/**
 * Implements hook_permission().
 */
function siteprocessor_config_visual_permission() {
  return array(
    'administer site processor images'=>array(
      'title'=>t('administer site processor images'),
      'description'=>t('administer site processor images'),
    ),
    'administer site processor custom css'=>array(
      'title'=>t('administer site processor custom css'),
      'description'=>t('administer site processor custom css'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function siteprocessor_config_visual_menu() {
  $items['admin/config/siteprocessor/config_visual'] = array(
    'title' => 'Visual configuration',
    'description' => 'Visual website configuration',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('siteprocessor_config_visual_images_form'),
    'access arguments' => array('administer site processor images'),
    'file' => 'siteprocessor_config_visual.admin.inc',
  );


  $items['admin/config/siteprocessor/config_visual/images'] = array(
    'title' => 'Images',
    'description' => 'Images',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('siteprocessor_config_visual_images_form'),
    'access callback' => 'user_access',
    'access arguments' => array('administer site processor images'),
    'file' => 'siteprocessor_config_visual.admin.inc',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );

  $items['admin/config/siteprocessor/config_visual/custom_css'] = array(
    'title' => 'Custom CSS',
    'description' => 'Custom CSS',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('siteprocessor_config_visual_custom_css_form'),
    'access callback' => 'user_access',
    'access arguments' => array('administer site processor custom css'),
    'file' => 'siteprocessor_config_visual.admin.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => 10,
  );

  return $items;
}

/**
 * Implements hook_init().
 */
function siteprocessor_config_visual_init() {
  global $theme_key;
  if (variable_get('theme_default','') == $theme_key) {
    // If the file does not exist.
    if (!file_exists(drupal_realpath('public://siteprocessor_config_visual.css'))) {
      _siteprocessor_config_visual_generate();
    }

    // Add css file.
    $url = parse_url(file_create_url('public://siteprocessor_config_visual.css'));
    $path = $url['path'];
    $add_css_opts = array(
      'type'       => 'file',
      'group'      => CSS_THEME,
      'every_page' => TRUE,
      'weight'     => 5000,
      'preprocess' => FALSE,
    );
    drupal_add_css($path, $add_css_opts);
  }
}

/**
 * Generate custom css-file.
 */
function _siteprocessor_config_visual_generate() {
  $css2add='';
  $css2add.=siteprocessor_config_visual_background_get_css()."\n";
  $css2add.=siteprocessor_config_visual_custom_get_css()."\n";
  file_save_data($css2add,'public://siteprocessor_config_visual.css',FILE_EXISTS_REPLACE);
  // The file just changed, make sure its effectuated.
  drupal_flush_all_caches();
}

//get custom css
function siteprocessor_config_visual_custom_get_css(){
  return variable_get('siteprocessor_config_visual_custom_css','');
}

/**
 * Implement a custom form submit handler
 */
function siteprocessor_config_visual_custom_css_form_submit($form, &$form_state) {
  variable_set('siteprocessor_config_visual_custom_css', $form_state['values']['siteprocessor_config_visual_custom_css']);
  _siteprocessor_config_visual_generate();
}

//get custom background
function siteprocessor_config_visual_background_get_css(){
  if ($image_fid = variable_get('siteprocessor_config_visual_background_image_fid', FALSE)) {
    $image = file_load($image_fid);
    $image_url=file_create_url($image->uri);
    return "
      body{
        background-image:url($image_url);
        background-position:top center;
        background-repeat:no-repeat;
      }
    ";
  }
  else return '';
}